<template>
  <view class="container">
    <!-- 课程分类 -->
    <scroll-view class="filter" scroll-x="true">
      <block wx:for="{{list}}" wx:key="{{lNumber}}">
        <view class="filter-item {{actived.lNumber == item.lNumber ? 'active' : ''}}" data-id="{{item.rdqId}}" id="{{item.rdqId}}" @tap="changeFilter">
          <text class="filter-item-text">{{item.lName}}</text>
        </view>
      </block>
    </scroll-view>
    <!-- 话题列表 -->
    <view class="content">
      <view class="loader">
        <image src="../../../images/index/loading.gif" wx-if="{{loading}}"></image>
      </view>
      <block wx:for="{{actived.data}}" wx:key="item.rdqId">
        <!-- 不显示 rdqId 为 all 的标签-->
        <block wx:if="{{item.rdqId != 'all'}}">
          <navigator url="./detail/detail">
            <view class="list-item">
              <text class="list-item-title">{{item.rdqTheme}}</text>
              <text class="list-item-desc">{{item.rdqText}}</text>
              <view class="list-item-bottom">
                <text class="list-item-bottom-text">时间: {{item.rdqDate}}</text>
                <text class="list-item-bottom-text">课程: {{item.lName}}</text>
                <text class="list-item-bottom-text">回复数: {{item.wbCcontenNum}}</text>
              </view>
            </view>
          </navigator>
        </block>
      </block>
    </view>

    <!-- 提醒消息 -->
    <text class="content-ending">{{actived.remind}}</text>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import apis from '../../../config/apis.js'
  export default class Bbs extends wepy.page {
    config = {

    }
    // bbs.js
    /**
     * Author: Huanda.Wu
     * Date: 2018.01.14
     */
    data = {
      page: 0,
      list: [
        // {
        //   rdqId: 'all',
        //   name: '全部'
        // },
        // {
        //   rdqId: '001',
        //   name: '网页设计与制作'
        // },
        // {
        //   rdqId: '002',
        //   name: '数据结构'
        // },
        // {
        //   rdqId: '003',
        //   name: 'JAVA'
        // },
        // {
        //   rdqId: '004',
        //   name: '计算机'
        // },
        // {
        //   rdqId: '005',
        //   name: '不上课'
        // },
        // {
        //   rdqId: '006',
        //   name: '崩溃'
        // }
      ],
      actived: {
        id: 0,
        rdqId: 'all',
        data: [],
        showMore: true,
        remind: '上滑加载更多'
      },
      loading: false,
      disableReming: false
    }
    async onLoad() {
      this.loading = true
      this.actived.data = []
      this.actived.showMore = true
      this.actived.remind = '上滑加载更多'
      this.page = 0
      await this.getSubjectsList()
      // console.log(Object.prototype.toString.call(apis._user.subjectList))
      // console.log(this.data)
    }

    async getSubjectsList(rdqId) {
      // rdqId = rdqId || this.data.actived.rdqId
      // if(this.data.page >= 5){
      //   this.actived.showMore = false
      //   this.actived.remind = '没有更多啦'

      //   return false
      // }
      // if(!this.data.page){
      //   this.actived.data = this.data.list[rdqId].storage
      // }
      // this.actived.remind = '正在加载中'
      // wepy.showNavigationBarLoading()
      
      // 获取班级相应的课程标签 
      let getSubjectsTags = {}
      getSubjectsTags = await wepy.request({
        url: `${apis._server}/learningsystem/Lesson/findClassLesson`,
        method: 'GET',
        header: {'content-type': 'application/x-www-form-urlencoded'},
        dataType: 'json',
        data: {
          cClassid: '1'
        }
      })
      console.log('课程标签')
      console.log(getSubjectsTags.data)
      apis._user.subjectListTags = getSubjectsTags.data.data
      console.log(apis._user.subjectListTags)
      if(getSubjectsTags.data.status || getSubjectsTags.data.status === 200){
        this.list = [
          {lNumber: 'all', lName: '全部', storage: []}
        ]
        this.list.push(...apis._user.subjectListTags)
        // this.actived.data = this.list
      }

      // 获取话题列表
      let getSubjects = {}
      getSubjects = await wepy.request({
        url: `${apis._server}/learningsystem/Releasediscussionquestions/selectRdqAndTag`,
        method: 'GET',
        header: {'content-type': 'application/x-www-form-urlencoded'},
        dataType: 'json',
        data: {}
      })
      console.log('话题列表')
      console.log(getSubjects.data)
      apis._user.subjectList = getSubjects.data.data
      console.log(apis._user.subjectList)
      
      if(getSubjects.data.status || getSubjects.data.status === 200){
        // this.list = [
        //   {rdqId: 'all', lesson: {lName: '全部'}}
        // ]
        // this.list.push(...apis._user.subjectList)
        // this.actived.data = this.list
        console.log("状态码正常")
      }
      console.log(this.list)
      console.log(this.actived.data)
      /* 根据后台传过来的JSON数组获取课程的编号，自动生成相应的id和区域按钮，
         id为前端自增长，用来确定对应按钮的位置，
         rdqId(课程编号)为后端传递过来的值，用来确定需要显示的相关内容 */
      // for (let i = 0; i < this.list.length; i++) {
      //   this.list.Arrid = i
      // }
      // console.log('list:'+this.list.length)
    }
    // 获取焦点
    changeFilter(e) {
      this.actived = {
        id: e.currentTarget.dataset.id,
        rdqId: e.currentTarget.id,
        data: [
          // {rdqTheme: '如何提高学习效率？', rdqText: '这是一篇关于如何提高学习效力的文章。', rdqDate: '2018-1-15', lessonName: '创新创业课程', wbCcontenNum: '999'},
          // {rdqTheme: '如何提高学习效率？', rdqText: '这是一篇关于如何提高学习效力的文章。', rdqDate: '2018-1-15', lessonName: '创新创业课程', wbCcontenNum: '999'},
          // {rdqTheme: '如何提高学习效率？', rdqText: '这是一篇关于如何提高学习效力的文章。', rdqDate: '2018-1-15', lessonName: '创新创业课程', wbCcontenNum: '999'},
          // {rdqTheme: '如何提高学习效率？', rdqText: '这是一篇关于如何提高学习效力的文章。', rdqDate: '2018-1-15', lessonName: '创新创业课程', wbCcontenNum: '999'},
          // {rdqTheme: '如何提高学习效率？', rdqText: '这是一篇关于如何提高学习效力的文章。', rdqDate: '2018-1-15', lessonName: '创新创业课程', wbCcontenNum: '999'}
        ],
        showMore: true,
        remind: '上滑加载更多'
      }
      this.$apply()
      this.getSubjectsList(e.currentTarget.dataset.id)
    }
    // 当数据处理完时停止页面下拉刷新
    onPullDownRefresh() {
      console.log('执行到这里')
      wx.stopPullDownRefresh()
    }
  }
</script>

<style lang="less">
  .container {
    background-color: #fff;
    padding-bottom: 20rpx;
  }
  .filter {
    position: fixed;
    z-index: 1;
    width: 100%;
    height: 180rpx;
    white-space: nowrap;
    background: -webkit-gradient(linear, left top, left bottom, from(rgba(255, 255, 255, 1)), color-stop(0.93, rgba(255, 255, 255, .93)), to(rgba(255, 255, 255, 0)));
  }
  .filter-item {
    display: inline-block; // 解决在 scroll-view 组件里面使用 view 时 view占用一整行的方法
    width: 140rpx;
    height: 140rpx;
    margin: 20rpx;
    margin-left: 0;
    border-radius: 5rpx;
    box-shadow: 1px 2px 3px #e5e5e5;
    opacity: .66;
    color: #fff;
  }
  .filter-item-text {
    display: flex;
    justify-content: center;
    align-items: baseline;
    width: 140rpx;
    height: 140rpx;
    white-space: pre-wrap;
  }
  .filter-item#all {
    margin-left: 20rpx;
    background-color: #0099ff;
  }
  .filter-item:nth-child(2n) {
    background-color: #c895ed;
  }
  .filter-item:nth-child(2n-1) {
    background-color: #78c9a2;
  }
  .filter-item.active {
    opacity: 1;
    transform: scale(1.08, 1.08);
    box-shadow: 1px 2px 3px #ddd;
  }
  .loader {
    display: inline-block;
    width: 100%;
    height: 180rpx;
    line-height: 180rpx;
    margin-top: -180rpx;
    letter-spacing: 10rpx;
    text-align: center;
    box-sizing: border-box;
    padding-top: 40rpx;
  }
  .loader image {
    height: 80rpx;
    width: 80rpx;
  }
  .content {
    display: flex;
    flex-direction: column;
    padding: 180rpx 20rpx 0;
  }
  .content-ending {
    width: 100%;
    color: #bbb;
    text-align: center;
    margin: 30rpx auto;
  }
  .list-item {
    display: flex;
    flex-direction: column;
    align-items: space-between;
    justify-content: center;
    height: 200rpx;
    margin-bottom: 20rpx;
    border-radius: 3px;
    box-shadow: 1px 2px 3px #ddd;
    padding: 0 30rpx;
    color: #fff;
  }
  .list-item:nth-child(2n) {
    background-color: #e994b5;
  }
  .list-item:nth-child(2n-1) {
    background-color: #73b4ef;
  }
  .list-item-title {
    font-size: 13pt;
    line-height: 175%;
    white-space: nowrap;
    text-overflow: ellipsis;
    width: 100%;
    overflow: hidden;
  }
  .list-item-desc {
    font-size: 10pt;
    width: 100%;
    height: 100rpx;
    line-height: 45rpx;
    overflow: hidden;
    text-overflow: ellipsis;
    word-break: break-all;
  }
  .list-item-bottom {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    padding: 5rpx 0;
    width: 100%;
  }
  .list-item-bottom-text {
    font-size: 10pt;
    line-height: 125%;
    opacity: 0.8;
  }
  /*
  .list-item-left {
    flex: 1 1 auto;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    padding-right: 10rpx;
  }
  .list-item-icon {
    flex: 0 0 60rpx;
    height: 60rpx;
    width: 60rpx;
    border-left: 1px solid #fff;
    padding-left: 25rpx;
  }
  */
</style>